<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Orjan Ameye</title><link>https://www.oameye.xyz/post/</link><atom:link href="https://www.oameye.xyz/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 13 Dec 2020 00:00:00 +0000</lastBuildDate><image><url>https://www.oameye.xyz/media/sharing.jpg</url><title>Posts</title><link>https://www.oameye.xyz/post/</link></image><item><title>How I build this Site</title><link>https://www.oameye.xyz/post/buildsite/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.oameye.xyz/post/buildsite/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Table of Contents&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#prerequirements">Prerequirements&lt;/a>&lt;/li>
&lt;li>&lt;a href="#setup">Setup&lt;/a>&lt;/li>
&lt;li>&lt;a href="#make-page">Make page&lt;/a>&lt;/li>
&lt;li>&lt;a href="#google-analytics">Google Analytics&lt;/a>&lt;/li>
&lt;li>&lt;a href="#code-highlighting">Code Highlighting&lt;/a>&lt;/li>
&lt;li>&lt;a href="#jupyter-notebook">Jupyter Notebook&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="prerequirements">Prerequirements&lt;/h2>
&lt;ul>
&lt;li>&lt;code>git&lt;/code> and Github account&lt;/li>
&lt;li>&lt;code>Hugo&lt;/code>&lt;/li>
&lt;li>(&lt;code>R&lt;/code>, RStudio and Blogdown)&lt;/li>
&lt;/ul>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.netlify.com/" target="_blank" rel="noopener">Netfly&lt;/a>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/LIFvgrRxdt4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h2 id="make-page">Make page&lt;/h2>
&lt;p>&lt;a href="https://wowchemy.com/docs/content/writing-markdown-latex/" target="_blank" rel="noopener">Page Elements: Writing content with Markdown, LaTeX, and Shortcodes&lt;/a>&lt;/p>
&lt;h2 id="google-analytics">Google Analytics&lt;/h2>
&lt;pre>&lt;code class="language-YAML">google_analytics: '3345897419'
&lt;/code>&lt;/pre>
&lt;p>stream id not measurement id&lt;/p>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>highlight.js:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cdnjs.com/libraries/highlight.js" target="_blank" rel="noopener">program languages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://highlightjs.org/static/demo/" target="_blank" rel="noopener">styles&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="jupyter-notebook">Jupyter Notebook&lt;/h2>
&lt;pre>&lt;code class="language-julia">using Pimc
function test(a::Int64, b::Int64)
if a == 1
return true
else
return false
end
end
&lt;/code>&lt;/pre>
&lt;iframe
src="./JupyterColorstyle.html"
width="100%"
height="500px"
style="border:none;">
&lt;/iframe></description></item><item><title>Welcome to Wowchemy, the website builder for Hugo</title><link>https://www.oameye.xyz/post/getting-started/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.oameye.xyz/post/getting-started/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;ol>
&lt;li>The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li>
&lt;li>The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong>no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong> and having &lt;strong>flexibility to later add even deeper personalization with HTML and CSS&lt;/strong>&lt;/li>
&lt;li>You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li>
&lt;/ol>
&lt;figure id="figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png" alt="The template is mobile first with a responsive design to ensure that your site looks stunning on every device." loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
&lt;/figcaption>&lt;/figure>
&lt;h2 id="get-started">Get Started&lt;/h2>
&lt;ul>
&lt;li>👉 &lt;a href="https://wowchemy.com/templates/" target="_blank" rel="noopener">&lt;strong>Create a new site&lt;/strong>&lt;/a>&lt;/li>
&lt;li>📚 &lt;a href="https://wowchemy.com/docs/" target="_blank" rel="noopener">&lt;strong>Personalize your site&lt;/strong>&lt;/a>&lt;/li>
&lt;li>💬 &lt;a href="https://discord.gg/z8wNYzb" target="_blank" rel="noopener">Chat with the &lt;strong>Wowchemy community&lt;/strong>&lt;/a> or &lt;a href="https://discourse.gohugo.io" target="_blank" rel="noopener">&lt;strong>Hugo community&lt;/strong>&lt;/a>&lt;/li>
&lt;li>🐦 Twitter: &lt;a href="https://twitter.com/wowchemy" target="_blank" rel="noopener">@wowchemy&lt;/a> &lt;a href="https://twitter.com/GeorgeCushen" target="_blank" rel="noopener">@GeorgeCushen&lt;/a> &lt;a href="https://twitter.com/search?q=%28%23MadeWithWowchemy%20OR%20%23MadeWithAcademic%29&amp;amp;src=typed_query" target="_blank" rel="noopener">#MadeWithWowchemy&lt;/a>&lt;/li>
&lt;li>💡 &lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/issues" target="_blank" rel="noopener">Request a &lt;strong>feature&lt;/strong> or report a &lt;strong>bug&lt;/strong> for &lt;em>Wowchemy&lt;/em>&lt;/a>&lt;/li>
&lt;li>⬆️ &lt;strong>Updating Wowchemy?&lt;/strong> View the &lt;a href="https://wowchemy.com/docs/hugo-tutorials/update/" target="_blank" rel="noopener">Update Tutorial&lt;/a> and &lt;a href="https://wowchemy.com/updates/" target="_blank" rel="noopener">Release Notes&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="crowd-funded-open-source-software">Crowd-funded open-source software&lt;/h2>
&lt;p>To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p>
&lt;h3 id="-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans">&lt;a href="https://wowchemy.com/plans/" target="_blank" rel="noopener">❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a>&lt;/h3>
&lt;p>As a token of appreciation for sponsoring, you can &lt;strong>unlock &lt;a href="https://wowchemy.com/plans/" target="_blank" rel="noopener">these&lt;/a> awesome rewards and extra features 🦄✨&lt;/strong>&lt;/p>
&lt;h2 id="ecosystem">Ecosystem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/wowchemy/hugo-academic-cli" target="_blank" rel="noopener">Hugo Academic CLI&lt;/a>:&lt;/strong> Automatically import publications from BibTeX&lt;/li>
&lt;/ul>
&lt;h2 id="inspiration">Inspiration&lt;/h2>
&lt;p>&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Check out the latest &lt;strong>demo&lt;/strong>&lt;/a> of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href="https://wowchemy.com/user-stories/" target="_blank" rel="noopener">view the &lt;strong>showcase&lt;/strong>&lt;/a> of personal, project, and business sites.&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Page builder&lt;/strong> - Create &lt;em>anything&lt;/em> with &lt;a href="https://wowchemy.com/docs/page-builder/" target="_blank" rel="noopener">&lt;strong>widgets&lt;/strong>&lt;/a> and &lt;a href="https://wowchemy.com/docs/content/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>elements&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Edit any type of content&lt;/strong> - Blog posts, publications, talks, slides, projects, and more!&lt;/li>
&lt;li>&lt;strong>Create content&lt;/strong> in &lt;a href="https://wowchemy.com/docs/content/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>Markdown&lt;/strong>&lt;/a>, &lt;a href="https://wowchemy.com/docs/import/jupyter/" target="_blank" rel="noopener">&lt;strong>Jupyter&lt;/strong>&lt;/a>, or &lt;a href="https://wowchemy.com/docs/install-locally/" target="_blank" rel="noopener">&lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Plugin System&lt;/strong> - Fully customizable &lt;a href="https://wowchemy.com/docs/customization/" target="_blank" rel="noopener">&lt;strong>color&lt;/strong> and &lt;strong>font themes&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Display Code and Math&lt;/strong> - Code highlighting and &lt;a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics" target="_blank" rel="noopener">LaTeX math&lt;/a> supported&lt;/li>
&lt;li>&lt;strong>Integrations&lt;/strong> - &lt;a href="https://analytics.google.com" target="_blank" rel="noopener">Google Analytics&lt;/a>, &lt;a href="https://disqus.com" target="_blank" rel="noopener">Disqus commenting&lt;/a>, Maps, Contact Forms, and more!&lt;/li>
&lt;li>&lt;strong>Beautiful Site&lt;/strong> - Simple and refreshing one page design&lt;/li>
&lt;li>&lt;strong>Industry-Leading SEO&lt;/strong> - Help get your website found on search engines and social media&lt;/li>
&lt;li>&lt;strong>Media Galleries&lt;/strong> - Display your images and videos with captions in a customizable gallery&lt;/li>
&lt;li>&lt;strong>Mobile Friendly&lt;/strong> - Look amazing on every screen with a mobile friendly version of your site&lt;/li>
&lt;li>&lt;strong>Multi-language&lt;/strong> - 34+ language packs including English, 中文, and Português&lt;/li>
&lt;li>&lt;strong>Multi-user&lt;/strong> - Each author gets their own profile page&lt;/li>
&lt;li>&lt;strong>Privacy Pack&lt;/strong> - Assists with GDPR&lt;/li>
&lt;li>&lt;strong>Stand Out&lt;/strong> - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li>
&lt;li>&lt;strong>One-Click Deployment&lt;/strong> - No servers. No databases. Only files.&lt;/li>
&lt;/ul>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;p>Wowchemy and its templates come with &lt;strong>automatic day (light) and night (dark) mode&lt;/strong> built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Demo&lt;/a> to see it in action! Day/night mode can also be disabled by the site admin in &lt;code>params.toml&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/docs/customization" target="_blank" rel="noopener">Choose a stunning &lt;strong>theme&lt;/strong> and &lt;strong>font&lt;/strong>&lt;/a> for your site. Themes are fully customizable.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright 2016-present &lt;a href="https://georgecushen.com" target="_blank" rel="noopener">George Cushen&lt;/a>.&lt;/p>
&lt;p>Released under the &lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md" target="_blank" rel="noopener">MIT&lt;/a> license.&lt;/p></description></item><item><title>Eigenfunctions of the time independent Schrodinger equation</title><link>https://www.oameye.xyz/post/eigenfunctions/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.oameye.xyz/post/eigenfunctions/</guid><description>&lt;p>The text and method is based on the following sources:&lt;/p>
&lt;ul>
&lt;li>Youtube, &lt;em>2D Schrodinger Equation Numerical Solution in PYTHON&lt;/em>, (2022), Available at: &lt;a href="https://www.youtube.com/watch?v=DF1SnjXZcbM&amp;amp;list=WL&amp;amp;index=8" target="_blank" rel="noopener">https://www.youtube.com/watch?v=DF1SnjXZcbM&amp;list=WL&amp;index=8&lt;/a> (Accessed: 6 March 2022).&lt;/li>
&lt;li>Alexvas, &lt;em>Discretization of Laplacian with boundary conditions&lt;/em>, (2017), Available at: &lt;a href="https://scicomp.stackexchange.com/q/25976" target="_blank" rel="noopener">https://scicomp.stackexchange.com/q/25976&lt;/a> (Accessed: 6 March 2022).&lt;/li>
&lt;li>Thomas H. Pulliam, David W. Zingg., &lt;em>Fundamental Algorithms in Computational Fluid Dynamics&lt;/em>, (2014), Springer, Available at: &lt;a href="https://link.springer.com/book/10.1007/978-3-319-05053-9" target="_blank" rel="noopener">https://link.springer.com/book/10.1007/978-3-319-05053-9&lt;/a> (Accessed: 6 March 2022).&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-julia">using PyPlot, PyCall
using LinearAlgebra
using SparseArrays
using Arpack, KrylovKit
&lt;/code>&lt;/pre>
&lt;h2 id="two-dimensional-box">Two-dimensional box&lt;/h2>
&lt;p>The goal is to solve the single particle Schrödinger equation in a two-dimensional box of length $2L$ of the Hamiltonian:
$$
\hat{h}=\frac{-\hbar^{2}}{2 m} \nabla^{2}+V(\mathbf{r}, t).
$$
The box can have a homogeneous Dirichlet boundary condition, i.e., the wave function evaluated at the border must vanish, or periodic boundary conditions. There can be a potential $V$ in the box. So let us a meshgrid of $\mathbf{x}$ and $\mathbf{y}$ coordinates.&lt;/p>
&lt;pre>&lt;code class="language-julia">N = 100
L = 10.0
Δx² = (2*L/N)^2
function meshgrid(x::LinRange{Float64, Int64}, y::LinRange{Float64, Int64})::Tuple{Matrix{Float64}, Matrix{Float64}}
X = [x for _ in y, x in x]
Y = [y for y in y, _ in x]
X, Y
end
x = LinRange(-L, L, N)
y = LinRange(-L, L, N)
X, Y = meshgrid(x, y);
&lt;/code>&lt;/pre>
&lt;h2 id="potential">Potential&lt;/h2>
&lt;p>The potential is chosen to be eightfold rotation symmetric quasicrystal, centered on $\mathbf{r}=0,$
$$
V(\mathbf{r})=V_{0} \sum_{k=1}^{4} \cos ^{2}\left(\mathbf{G}_{k} \cdot \mathbf{r}\right)
$$
where $V_{0}$ is the potential amplitude and the quantities $G_{k}$ are the lattice vectors of four mutually incoherent standing waves oriented at the angles $0^{\circ}, 45^{\circ}, 90^{\circ}$, and $135^{\circ}$, respectively. The lattice vectors have norm $\left|G_{k}\right|=\pi / a$.&lt;/p>
&lt;pre>&lt;code class="language-julia">function get_potential(x, y, V₀)
return V₀*(cos(pi*x)^2 + cos(pi*√2/2*(x+y))^2 + cos(pi*y)^2 + cos(-pi/(√2)*(x-y))^2)
end
# def get_potential(x, y):
# return np.exp(-(x-0.3)**2/(2*0.1**2))*np.exp(-(y-0.3)**2/(2*0.1**2))
V = get_potential.(X,Y, 0.005)
fig = figure(figsize=(6.2,5))
contourf(X, Y, V, 50)
# pcolormesh(X, Y, V, cmap=:RdBu)
colorbar()
# plot_surface(X, Y, V)
&lt;/code>&lt;/pre>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="png" srcset="
/post/eigenfunctions/output_6_0_hu3b0df9a8cf757933c6a55f90ff0a41bb_179880_aa274beb4957ff60b82c3f5c79717615.webp 400w,
/post/eigenfunctions/output_6_0_hu3b0df9a8cf757933c6a55f90ff0a41bb_179880_3cfffccfe2cc853c2e3785a09101425b.webp 760w,
/post/eigenfunctions/output_6_0_hu3b0df9a8cf757933c6a55f90ff0a41bb_179880_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://www.oameye.xyz/post/eigenfunctions/output_6_0_hu3b0df9a8cf757933c6a55f90ff0a41bb_179880_aa274beb4957ff60b82c3f5c79717615.webp"
width="558"
height="434"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;pre>&lt;code>PyObject &amp;lt;matplotlib.colorbar.Colorbar object at 0x0000000081FE1460&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="units">Units&lt;/h2>
&lt;p>The Schrödinger equation is given by
$$ \left[\frac{-\hbar^{2}}{2 m} \nabla^{2}+V(\mathbf{r})\right] \psi(\mathbf{r}) = E\psi(\mathbf{r}),$$
Let us use the lattice spacing $a$ and the corresponding recoil energy $E_r = \pi^2\hbar^2/2ma^2$ as the space and energy units, respectively, such that we have
$$
\left[\frac{-\hbar^2}{2mE_ra^2} \tilde{\nabla}^{2}+\frac{V(\mathbf{\tilde{r}})}{E_r}\right] \psi(\mathbf{\tilde{r}}) = \left[\frac{-1}{\pi^2} \tilde{\nabla}^{2}+\tilde{V}_{0} \sum_{k=1}^{4} \cos ^{2}\left(\tilde{\mathbf{G}}_{k} \cdot \tilde{\mathbf{r}}\right)\right] \psi(\mathbf{\tilde{r}}) = \tilde{E}\psi(\mathbf{\tilde{r}}),
$$
where $|\tilde{\mathbf{G}}_{k}|=\pi$, $\tilde{\mathbf{r}} = \frac{\mathbf{r}}{a}$, and $\tilde{E}=\frac{E}{E_r}$.&lt;/p>
&lt;h2 id="discretize-in-one-dimension">Discretize in one dimension&lt;/h2>
&lt;p>Rest us to discretize our Hamiltonian. The idea can be easily explained by the following &lt;strong>finite difference approximation&lt;/strong> of the second derivative in one dimension
$$ \frac{d^2 \psi}{dx^2} \approx \frac{\psi_{i+1}-2\psi_i + \psi_{i-1}}{\Delta x^2}.$$&lt;/p>
&lt;h3 id="dirichlet-boundary-conditions">Dirichlet boundary conditions&lt;/h3>
&lt;p>Suppose we have $M=4$ interior points and $a$ and $b$ two boundary points, a mesh with four interior points $\Delta x=2L /(M+1)$, represented as follows
\begin{align*}
&amp;amp;\qquad \ \ a \ \ \ \ 1 \ \ \ \ 2 \ \ \ \ 3 \ \ \ \, 4 \ \ \ \ b \\\
&amp;amp;x=-L \ - \ - \ - \ - \ \ L
\end{align*}
We impose Dirichlet boundary conditions, $u(-L)=u_{a}, u(L)=u_{b}$ and use the &lt;strong>centered finite difference approximation&lt;/strong> at every point in the mesh. We arrive at the four equations:
\begin{align*}
\left(d_{x x} u\right)_{1} &amp;=\frac{1}{\Delta x^{2}}\left(u_{a}-2 u_{1}+u_{2}\right) \qquad \left(d_{x x} u\right)_{2} =\frac{1}{\Delta x^{2}}\left(u_{1}-2 u_{2}+u_{3}\right) \\\\\\
\left(d_{x x} u\right)_{3} &amp;=\frac{1}{\Delta x^{2}}\left(u_{2}-2 u_{3}+u_{4}\right) \qquad \left(d_{x x} u\right)_{4} =\frac{1}{\Delta x^{2}}\left(u_{3}-2 u_{4}+u_{b}\right)
\end{align*}
Introducing
\begin{align*}
\vec{u}=\left( \begin{array}{c} \psi_{1} \\\ \psi_{2} \\\ \psi_{3} \\\ \psi_{4} \end{array} \right)
\quad
(\overrightarrow{b c})=\frac{1}{\Delta x^{2}} \left( \begin{array}{c} \psi_{a} \\\ 0 \\\ 0 \\\ \psi_{b} \end{array} \right)
\quad
A=\frac{1}{\Delta x^{2}} \left( \begin{array}{rrrr} -2 &amp;amp; 1 &amp;amp; &amp;amp; \\\ 1 &amp;amp; -2 &amp;amp; 1 &amp;amp; \\\ &amp;amp; 1 &amp;amp; -2 &amp;amp; 1 \\\ &amp;amp; &amp;amp; 1 &amp;amp; -2 \end{array} \right)
\end{align*}
we can rewrite in matrix form as
\begin{align*}
\frac{d^2 \psi}{dx^2} =\frac{1}{\Delta x^{2}}D= A \vec{\psi}+(\overrightarrow{b c})
\end{align*}&lt;/p>
&lt;h3 id="periodic-boundary-conditions">Periodic boundary conditions&lt;/h3>
&lt;p>$\color{red}{\text{This subsection has to tested and worked out. First try did not work.}}$&lt;/p>
&lt;p>Suppose we have $M=8$ points on a linear &lt;strong>periodic&lt;/strong> mesh, represented as follows
\begin{align*}
&amp;amp;\cdots \ \ \ 7 \ \ \ \ 8 \ \ \ \ \ \ a \ \ \ \ 1 \ \ \ \ 2 \ \ \ \ 3 \ \ \ \ 4 \ \ \ \ b \ \ \ \ 1 \ \ \ \ 2 \ \ \ \cdots \\\
&amp;amp;x= \ - \ \ - \ \ -L \ \ - \ \ - \ \ - \ \ - \ \ L \ \ - \ \ -
\end{align*}
where we have that $\psi(L)=\psi(-L)$. It can be shown that the matrix representation is modified by
\begin{align*}
\frac{d^2 \psi}{dx^2} =\frac{1}{\Delta x^{2}}D_p=\frac{1}{\Delta x^{2}} \left( \begin{array}{rrrr} -2 &amp;amp; 1 &amp;amp; &amp;amp; 1 \\\ 1 &amp;amp; -2 &amp;amp; 1 &amp;amp; \\\ &amp;amp; 1 &amp;amp; -2 &amp;amp; 1 \\\ 1 &amp;amp; &amp;amp; 1 &amp;amp; -2 \end{array} \right)
\end{align*}&lt;/p>
&lt;h2 id="discretize-in-two-dimensions">Discretize in two dimensions&lt;/h2>
&lt;p>In &lt;strong>two dimensions&lt;/strong>, the wavefunction is not a vector anymore but a matrix. However, we would like to write it back as vector via the transformation
$$
\left( \begin{array}{rrrr} \psi_{11} &amp;amp; \psi_{12} &amp;amp; \cdots &amp;amp; \psi_{1N} \\\ \psi_{21} &amp;amp; \psi_{22} &amp;amp; \cdots &amp;amp; \psi_{2N} \\\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\\ \psi_{N1} &amp;amp; \psi_{N2} &amp;amp; \cdots &amp;amp; \psi_{NN} \end{array} \right) \rightarrow \left( \begin{array}{c} \psi_{11} \\\ \psi_{12} \\\ \vdots \\\ \psi_{NN} \end{array} \right)
$$
The second derivative finite difference matrix must than be written as
$$
\frac{\partial^2 \psi}{\partial x^2} = \frac{1}{\Delta x^{2}} I \otimes D = \frac{1}{\Delta x^{2}} \left( \begin{array}{rrr} D &amp;amp; &amp;amp; \\\ &amp;amp; \ddots &amp;amp; \\\ &amp;amp; &amp;amp; D\end{array} \right)
$$
where $\otimes$ is the &lt;strong>Kronecker product&lt;/strong>. The &lt;strong>2D Laplacian&lt;/strong> can than be written as
$$
\nabla^{2} = \frac{\partial^2 \psi}{\partial x^2} + \frac{\partial^2 \psi}{\partial y^2} = \frac{1}{\Delta x^{2}} (I \otimes D + D \otimes I) = \frac{1}{\Delta x^{2}} D\oplus D
$$
where $\oplus$ is the &lt;strong>Kronecker sum&lt;/strong>, and we used that we discretized space as a &lt;strong>squared grid&lt;/strong>, i.e. $\Delta x^{2}=\Delta y^{2}$.&lt;/p>
&lt;h2 id="hamiltonian">Hamiltonian&lt;/h2>
&lt;p>Let us assume the homogeneous Dirichlet Boundary conditions $\psi(L, y) = \psi(-L, y) = \psi(x, L) = \psi(x, -L) = 0$. The &lt;strong>discretized Schrödinger equation&lt;/strong> can then be written as
$$
\left[-\frac{1}{\pi^2}(D \oplus D) + \Delta x^2 \tilde{V} \right] \psi = \left( \Delta x^2 \tilde{E}\right) \psi,
$$
where $D$ has -2 on the main diagonal and 1 on the two neighboring diagonals and $\psi$ is a vector. One could define the potential in units of $\Delta x^2$; in other words &lt;code>get_potential&lt;/code> actually returns $\Delta x^2 V$. However, we will leave $\Delta x^2$ in the kinetic term.
Now we construct
$$
\hat{h} = -\frac{1}{\Delta x^{2}\pi^2} D \oplus D + \tilde{V}
$$
such that the corresponding eigenvalues $\tilde{E}$ are in units of recoil energy $E_r$.
Let $T=-\frac{1}{\Delta x^{2}\pi^2} D \oplus D$ and $U = V$&lt;/p>
&lt;pre>&lt;code class="language-julia">diag = ones(N); # vector of ones
diags = Vector([diag[begin:end-1], -2*diag, diag[begin:end-1]]); # vector of vectors of the diagonals
D = sparse(Tridiagonal(diags...)) # creates the discretised 2nd derivative
T = -1/(Δx²*pi^2) * (kron(D, sparse(I,N,N)) + kron(sparse(I,N,N), D)) #N**2 x N**2 matrix
U = spdiagm(reshape(V, N^2))
H = T+U;
&lt;/code>&lt;/pre>
&lt;p>Here we used the package &lt;code>SparseArrays.jl&lt;/code> to make the computations faster. &lt;strong>Sparse arrays&lt;/strong> are arrays that contain enough zeros that storing them in a special data structure leads to savings in space and execution time, compared to dense arrays.&lt;/p>
&lt;h2 id="eigenvectors-and-eigenvalues">Eigenvectors and eigenvalues&lt;/h2>
&lt;p>Now that we constructed our discretized Hamiltonian we can just exactly diagonalize our Hamiltonian to find the &lt;strong>eigenvalues&lt;/strong> and &lt;strong>eigenvector&lt;/strong>. We shall to this with the package &lt;code>Arpack.jl&lt;/code> which is a &lt;em>Julia&lt;/em> wrapper to a &lt;em>FORTRAN 77&lt;/em> library designed to compute a few eigenvalues and corresponding eigenvectors of large sparse or structured matrices, using the &lt;strong>Implicitly Restarted Arnoldi Method&lt;/strong> (IRAM) or, in the case of symmetric matrices, the corresponding variant of the &lt;strong>Lanczos algorithm&lt;/strong>. Both are classified as &lt;em>Krylov subspace based algorithms&lt;/em> (see wikipedia). It is used by many popular numerical computing environments such as &lt;em>SciPy&lt;/em>, &lt;em>Mathematica&lt;/em>, &lt;em>GNU Octave&lt;/em> and &lt;em>MATLAB&lt;/em> to provide this functionality.&lt;/p>
&lt;p>We use the &lt;code>eigs&lt;/code> function where &lt;code>nev&lt;/code> specifies how many eigenvalues and eigenvectors we want and &lt;code>which&lt;/code> specifies the type of eigenvalues to compute. For my purposes I only need the ground state wave function.&lt;/p>
&lt;p>Alternatively, one could use &lt;code>KrylovKit.jl&lt;/code>, a native Julia package collecting a number of Krylov-based algorithms for linear problems, singular value and eigenvalue problems and the application of functions of linear maps or operators to vectors. With &lt;code>KrylovKit.jl&lt;/code> I manage to find better results if when I increase the number of point $N$. My theory is that it, as black box solver, uses another method above a certain threshold $N^*$, whereas &lt;code>Arpack.jl&lt;/code> sticks to the same method and hence gives worse results.&lt;/p>
&lt;pre>&lt;code class="language-julia"># eigenvalues, eigenvectors = eigs(H, nev=1, which=:SM);
_, vecs, _ = eigsolve(H, 1, :SR);
# vecs[1]
&lt;/code>&lt;/pre>
&lt;p>As we constructed the Hamiltonian to be a $N^2 \times N^2$ so that $\psi$ could be a vector, we have to reshape the eigenvectors back to a $N \times N$ matrix.&lt;/p>
&lt;pre>&lt;code class="language-julia">function get_e(n::Int64)
return reshape(vecs[1]', N, N)
end;
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-julia">figure(figsize=(6.2,5))
pcolormesh(X, Y, get_e(0)^2, cmap=:RdBu)
colorbar()
# contourf(X, Y, get_e(0)^2, 100)
&lt;/code>&lt;/pre>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="png" srcset="
/post/eigenfunctions/output_20_0_hufc67467fdee818d97001458e24b0f472_36038_983d3b93f7e9c05263dc7cf5df085168.webp 400w,
/post/eigenfunctions/output_20_0_hufc67467fdee818d97001458e24b0f472_36038_a23be35e0f06b0cec3de224d533613f6.webp 760w,
/post/eigenfunctions/output_20_0_hufc67467fdee818d97001458e24b0f472_36038_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://www.oameye.xyz/post/eigenfunctions/output_20_0_hufc67467fdee818d97001458e24b0f472_36038_983d3b93f7e9c05263dc7cf5df085168.webp"
width="558"
height="432"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;pre>&lt;code>PyObject &amp;lt;matplotlib.colorbar.Colorbar object at 0x0000000006C91580&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;pre>&lt;code class="language-julia">using PyPlot, PyCall
using LinearAlgebra
using SparseArrays
using Arpack, KrylovKit
function meshgrid(x::LinRange{Float64, Int64}, y::LinRange{Float64, Int64})::Tuple{Matrix{Float64}, Matrix{Float64}}
X = [x for _ in y, x in x]
Y = [y for y in y, _ in x]
X, Y
end
function QC(x::Float64, y::Float64, V₀::Float64)::Float64
return V₀*(cos(pi*x)^2 + cos(pi*√2/2*(x+y))^2 + cos(pi*y)^2 + cos(-pi/(√2)*(x-y))^2)
end
function free(x::Float64, y::Float64, V₀::Float64)::Float64
return V₀*(0*x+0*y)
end
function PC(x::Float64, y::Float64, V₀::Float64)::Float64
return V₀*(sin(pi*x)^2+sin(pi*y)^2)
end
function eigenfunctionDBCArpack(V::Matrix{Float64}, L::Float64, N::Int64)
Δx² = (2*L/N)^2
# creates the discretised 2nd derivative
D = sparse(Tridiagonal(ones(N-1), -2*ones(N), ones(N-1)))
# N**2 x N**2 matrix
T = -1/(Δx²*pi^2) * (kron(D, sparse(I,N,N)) + kron(sparse(I,N,N), D))
U = spdiagm(reshape(V, N^2))
H = T + U;
_, eigenvector = eigs(H, nev=1, which=:SM);
return reshape(eigenvector', N, N)
end
function eigenfunctionDBCKrylov(V::Matrix{Float64}, L::Float64, N::Int64)
Δx² = (2*L/N)^2
# creates the discretised 2nd derivative
D = sparse(Tridiagonal(ones(N-1), -2*ones(N), ones(N-1)))
# N**2 x N**2 matrix
T = -1/(Δx²*pi^2) * (kron(D, sparse(I,N,N)) + kron(sparse(I,N,N), D))
U = spdiagm(reshape(V, N^2))
H = T + U;
_, vecs, _ = eigsolve(H, 1,:SR)
# _, eigenvector = eigs(H, nev=1, which=:SM);
return reshape(vecs[1]', N, N)
end
# function eigenfunctionPBC(V::Matrix{Float64})
# Δx² = (2*L/N)^2
# # creates the discretised 2nd derivative
# D = sparse(Tridiagonal(ones(N-1), -2*ones(N), ones(N-1)))
# D[1, end] = 1.0
# D[end, 1] = 1.0
# # N**2 x N**2 matrix
# T = -1/(Δx²*pi^2) * (kron(D, sparse(I,N,N)) + kron(sparse(I,N,N), D))
# U = spdiagm(reshape(V, N^2))
# H = T + U;
# N = size(V)[1]
# # creates the discretised 2nd derivative
# D = sparse(Tridiagonal(ones(N-1), -2*ones(N), ones(N-1)))
# _, eigenvector = eigs(H, nev=1, which=:SM);
# return reshape(eigenvector', N, N)
# end
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-julia">V₀ = 0.8
L = 50.0
Δx² = 0.1
N = Int64(div(2L, Δx²))
X, Y = meshgrid(LinRange(-L, L, N), LinRange(-L, L, N));
V = QC.(X, Y, V₀)
ef = eigenfunctionDBCKrylov(V, L, N)
fig, axes = subplots(nrows=1, ncols=2, figsize=(12, 5))
im1 = axes[1].pcolormesh(X[450:550,450:550], Y[450:550,450:550], V[450:550,450:550], cmap=:RdBu)
colorbar(im1, ax=axes[1])
im2 = axes[2].pcolormesh(X[450:550,450:550], Y[450:550,450:550], ef[450:550,450:550]^2, cmap=:RdBu)
colorbar(im2, ax=axes[2])
&lt;/code>&lt;/pre>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="png" srcset="
/post/eigenfunctions/output_23_0_hucb5a79a5598546f740fa655a52d77137_104873_566f1939be54d43f92df13569ef62ef6.webp 400w,
/post/eigenfunctions/output_23_0_hucb5a79a5598546f740fa655a52d77137_104873_68cc67f804bceeb5f9ad28aa6e816245.webp 760w,
/post/eigenfunctions/output_23_0_hucb5a79a5598546f740fa655a52d77137_104873_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://www.oameye.xyz/post/eigenfunctions/output_23_0_hucb5a79a5598546f740fa655a52d77137_104873_566f1939be54d43f92df13569ef62ef6.webp"
width="760"
height="321"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;pre>&lt;code>PyObject &amp;lt;matplotlib.colorbar.Colorbar object at 0x000000006E89FF40&amp;gt;
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-julia"># @pyimport matplotlib.animation as anim
# using Base64
# fig = figure(figsize=(6.2,5))
# function make_frame(i)
# V₀ = 0.02*i
# L = 10.0
# N = 150
# X, Y = meshgrid(LinRange(-L, L, N), LinRange(-L, L, N));
# V = QC.(X, Y, V₀)
# ef = eigenfunctionDBC(V)
# pcolormesh(X, Y, ef^2, cmap=:RdBu)
# end
# withfig(fig) do
# myanim = anim.FuncAnimation(fig, make_frame, frames=20, interval=200)
# myanim[:save](&amp;quot;test2.mp4&amp;quot;, bitrate=-1, extra_args=[&amp;quot;-vcodec&amp;quot;, &amp;quot;libx264&amp;quot;, &amp;quot;-pix_fmt&amp;quot;, &amp;quot;yuv420p&amp;quot;])
# end
# function showanim(filename)
# base64_video = base64encode(open(filename))
# display(&amp;quot;text/html&amp;quot;, &amp;quot;&amp;quot;&amp;quot;&amp;lt;video controls src=&amp;quot;data:video/x-m4v;base64,$base64_video&amp;quot;&amp;gt;&amp;quot;&amp;quot;&amp;quot;)
# end
# showanim(&amp;quot;test2.mp4&amp;quot;)
&lt;/code>&lt;/pre></description></item></channel></rss>